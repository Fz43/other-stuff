"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.pluginFinder = exports.loadPluginFolder = void 0;
const tslib_1 = require("tslib");
const fs = (0, tslib_1.__importStar)(require("fs"));
const path = (0, tslib_1.__importStar)(require("path"));
async function loadPluginFolder(basedir, folder) {
    if (folder.isDirectory()) {
        if (fs.existsSync(path.join(basedir, folder.name, 'index.js'))) {
            await Promise.resolve().then(() => (0, tslib_1.__importStar)(require(path.join(basedir, folder.name, 'index.js'))));
        }
        else if (fs.existsSync(path.join(basedir, folder.name, 'register.js'))) {
            await Promise.resolve().then(() => (0, tslib_1.__importStar)(require(path.join(basedir, folder.name, 'register.js'))));
        }
        else if (fs.existsSync(path.join(basedir, folder.name, 'dist', 'index.js'))) {
            await Promise.resolve().then(() => (0, tslib_1.__importStar)(require(path.join(basedir, folder.name, 'dist', 'index.js'))));
        }
        else if (fs.existsSync(path.join(basedir, folder.name, 'dist', 'register.js'))) {
            await Promise.resolve().then(() => (0, tslib_1.__importStar)(require(path.join(basedir, folder.name, 'dist', 'register.js'))));
        }
    }
}
exports.loadPluginFolder = loadPluginFolder;
async function pluginFinder(basedir) {
    if (fs.existsSync(basedir)) {
        if (fs.existsSync(path.join(basedir, 'plugins'))) {
            for await (const folder of fs.readdirSync(path.join(basedir, 'plugins'), { withFileTypes: true })) {
                await loadPluginFolder(path.join(basedir, 'plugins'), folder);
            }
        }
        if (fs.existsSync(path.join(basedir, 'src', 'plugins'))) {
            for await (const folder of fs.readdirSync(path.join(basedir, 'src', 'plugins'), { withFileTypes: true })) {
                await loadPluginFolder(path.join(basedir, 'src', 'plugins'), folder);
            }
        }
        if (fs.existsSync(path.join(basedir, 'node_modules'))) {
            for await (const folder of fs.readdirSync(path.join(basedir, 'node_modules'), { withFileTypes: true })) {
                if (!folder.name.includes('gcommands-plugin-'))
                    continue;
                await loadPluginFolder(path.join(basedir, 'node_modules'), folder);
            }
        }
        if (fs.existsSync(path.join(basedir, 'node_modules', '@gcommands'))) {
            for await (const folder of fs.readdirSync(path.join(basedir, 'node_modules', '@gcommands'), {
                withFileTypes: true,
            })) {
                if (!folder.name.includes('plugin-'))
                    continue;
                await loadPluginFolder(path.join(basedir, 'node_modules', '@gcommands'), folder);
            }
        }
    }
}
exports.pluginFinder = pluginFinder;
